/**
 * 
 * Access to view and update game states
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LogEntriesResource', 'model/LogEntryResource', 'model/ModelPluginResource', 'model/ModelPluginsResource', 'model/ModelResource', 'model/OperationPatternResource', 'model/OperationPatternSetResource', 'model/OperationPatternSetsResource', 'model/PartInstanceResource', 'model/PartInstancesResource', 'model/PartPatternForm', 'model/PartPatternResource', 'model/PartPatternResourceObject', 'model/PartPrototypeResource', 'model/PartPrototypesResource', 'model/PartResource', 'model/ParticipantCreationForm', 'model/ParticipantResource', 'model/ParticipantsResource', 'model/PartsResource', 'model/PlacePatternForm', 'model/PlacePatternResource', 'model/PlacePatternResourceObject', 'model/PlacePrototypeResource', 'model/PlacePrototypesResource', 'model/PlaceResource', 'model/PlaceTypeResource', 'model/PlaceTypesResource', 'model/PlacesResource', 'model/QuantityPatternForm', 'model/QuantityPatternResource', 'model/RelationshipResource', 'model/RelationshipTypeResource', 'model/RelationshipTypesResource', 'model/RelationshipsResource', 'model/RoleResource', 'model/RolesResource', 'model/RuleResource', 'model/RulesResource', 'model/StageResource', 'model/StagesResource', 'model/StateCreationForm', 'model/StateMutationForm', 'model/StateMutationResource', 'model/StateOperationForm', 'model/StateResource', 'api/ModelsApi', 'api/StatesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/LogEntriesResource'), require('./model/LogEntryResource'), require('./model/ModelPluginResource'), require('./model/ModelPluginsResource'), require('./model/ModelResource'), require('./model/OperationPatternResource'), require('./model/OperationPatternSetResource'), require('./model/OperationPatternSetsResource'), require('./model/PartInstanceResource'), require('./model/PartInstancesResource'), require('./model/PartPatternForm'), require('./model/PartPatternResource'), require('./model/PartPatternResourceObject'), require('./model/PartPrototypeResource'), require('./model/PartPrototypesResource'), require('./model/PartResource'), require('./model/ParticipantCreationForm'), require('./model/ParticipantResource'), require('./model/ParticipantsResource'), require('./model/PartsResource'), require('./model/PlacePatternForm'), require('./model/PlacePatternResource'), require('./model/PlacePatternResourceObject'), require('./model/PlacePrototypeResource'), require('./model/PlacePrototypesResource'), require('./model/PlaceResource'), require('./model/PlaceTypeResource'), require('./model/PlaceTypesResource'), require('./model/PlacesResource'), require('./model/QuantityPatternForm'), require('./model/QuantityPatternResource'), require('./model/RelationshipResource'), require('./model/RelationshipTypeResource'), require('./model/RelationshipTypesResource'), require('./model/RelationshipsResource'), require('./model/RoleResource'), require('./model/RolesResource'), require('./model/RuleResource'), require('./model/RulesResource'), require('./model/StageResource'), require('./model/StagesResource'), require('./model/StateCreationForm'), require('./model/StateMutationForm'), require('./model/StateMutationResource'), require('./model/StateOperationForm'), require('./model/StateResource'), require('./api/ModelsApi'), require('./api/StatesApi'));
  }
}(function(ApiClient, LogEntriesResource, LogEntryResource, ModelPluginResource, ModelPluginsResource, ModelResource, OperationPatternResource, OperationPatternSetResource, OperationPatternSetsResource, PartInstanceResource, PartInstancesResource, PartPatternForm, PartPatternResource, PartPatternResourceObject, PartPrototypeResource, PartPrototypesResource, PartResource, ParticipantCreationForm, ParticipantResource, ParticipantsResource, PartsResource, PlacePatternForm, PlacePatternResource, PlacePatternResourceObject, PlacePrototypeResource, PlacePrototypesResource, PlaceResource, PlaceTypeResource, PlaceTypesResource, PlacesResource, QuantityPatternForm, QuantityPatternResource, RelationshipResource, RelationshipTypeResource, RelationshipTypesResource, RelationshipsResource, RoleResource, RolesResource, RuleResource, RulesResource, StageResource, StagesResource, StateCreationForm, StateMutationForm, StateMutationResource, StateOperationForm, StateResource, ModelsApi, StatesApi) {
  'use strict';

  /**
   * Access_to_view_and_update_game_states.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var SwaggerJsClient = require('index'); // See note below*.
   * var xxxSvc = new SwaggerJsClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new SwaggerJsClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new SwaggerJsClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new SwaggerJsClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The LogEntriesResource model constructor.
     * @property {module:model/LogEntriesResource}
     */
    LogEntriesResource: LogEntriesResource,
    /**
     * The LogEntryResource model constructor.
     * @property {module:model/LogEntryResource}
     */
    LogEntryResource: LogEntryResource,
    /**
     * The ModelPluginResource model constructor.
     * @property {module:model/ModelPluginResource}
     */
    ModelPluginResource: ModelPluginResource,
    /**
     * The ModelPluginsResource model constructor.
     * @property {module:model/ModelPluginsResource}
     */
    ModelPluginsResource: ModelPluginsResource,
    /**
     * The ModelResource model constructor.
     * @property {module:model/ModelResource}
     */
    ModelResource: ModelResource,
    /**
     * The OperationPatternResource model constructor.
     * @property {module:model/OperationPatternResource}
     */
    OperationPatternResource: OperationPatternResource,
    /**
     * The OperationPatternSetResource model constructor.
     * @property {module:model/OperationPatternSetResource}
     */
    OperationPatternSetResource: OperationPatternSetResource,
    /**
     * The OperationPatternSetsResource model constructor.
     * @property {module:model/OperationPatternSetsResource}
     */
    OperationPatternSetsResource: OperationPatternSetsResource,
    /**
     * The PartInstanceResource model constructor.
     * @property {module:model/PartInstanceResource}
     */
    PartInstanceResource: PartInstanceResource,
    /**
     * The PartInstancesResource model constructor.
     * @property {module:model/PartInstancesResource}
     */
    PartInstancesResource: PartInstancesResource,
    /**
     * The PartPatternForm model constructor.
     * @property {module:model/PartPatternForm}
     */
    PartPatternForm: PartPatternForm,
    /**
     * The PartPatternResource model constructor.
     * @property {module:model/PartPatternResource}
     */
    PartPatternResource: PartPatternResource,
    /**
     * The PartPatternResourceObject model constructor.
     * @property {module:model/PartPatternResourceObject}
     */
    PartPatternResourceObject: PartPatternResourceObject,
    /**
     * The PartPrototypeResource model constructor.
     * @property {module:model/PartPrototypeResource}
     */
    PartPrototypeResource: PartPrototypeResource,
    /**
     * The PartPrototypesResource model constructor.
     * @property {module:model/PartPrototypesResource}
     */
    PartPrototypesResource: PartPrototypesResource,
    /**
     * The PartResource model constructor.
     * @property {module:model/PartResource}
     */
    PartResource: PartResource,
    /**
     * The ParticipantCreationForm model constructor.
     * @property {module:model/ParticipantCreationForm}
     */
    ParticipantCreationForm: ParticipantCreationForm,
    /**
     * The ParticipantResource model constructor.
     * @property {module:model/ParticipantResource}
     */
    ParticipantResource: ParticipantResource,
    /**
     * The ParticipantsResource model constructor.
     * @property {module:model/ParticipantsResource}
     */
    ParticipantsResource: ParticipantsResource,
    /**
     * The PartsResource model constructor.
     * @property {module:model/PartsResource}
     */
    PartsResource: PartsResource,
    /**
     * The PlacePatternForm model constructor.
     * @property {module:model/PlacePatternForm}
     */
    PlacePatternForm: PlacePatternForm,
    /**
     * The PlacePatternResource model constructor.
     * @property {module:model/PlacePatternResource}
     */
    PlacePatternResource: PlacePatternResource,
    /**
     * The PlacePatternResourceObject model constructor.
     * @property {module:model/PlacePatternResourceObject}
     */
    PlacePatternResourceObject: PlacePatternResourceObject,
    /**
     * The PlacePrototypeResource model constructor.
     * @property {module:model/PlacePrototypeResource}
     */
    PlacePrototypeResource: PlacePrototypeResource,
    /**
     * The PlacePrototypesResource model constructor.
     * @property {module:model/PlacePrototypesResource}
     */
    PlacePrototypesResource: PlacePrototypesResource,
    /**
     * The PlaceResource model constructor.
     * @property {module:model/PlaceResource}
     */
    PlaceResource: PlaceResource,
    /**
     * The PlaceTypeResource model constructor.
     * @property {module:model/PlaceTypeResource}
     */
    PlaceTypeResource: PlaceTypeResource,
    /**
     * The PlaceTypesResource model constructor.
     * @property {module:model/PlaceTypesResource}
     */
    PlaceTypesResource: PlaceTypesResource,
    /**
     * The PlacesResource model constructor.
     * @property {module:model/PlacesResource}
     */
    PlacesResource: PlacesResource,
    /**
     * The QuantityPatternForm model constructor.
     * @property {module:model/QuantityPatternForm}
     */
    QuantityPatternForm: QuantityPatternForm,
    /**
     * The QuantityPatternResource model constructor.
     * @property {module:model/QuantityPatternResource}
     */
    QuantityPatternResource: QuantityPatternResource,
    /**
     * The RelationshipResource model constructor.
     * @property {module:model/RelationshipResource}
     */
    RelationshipResource: RelationshipResource,
    /**
     * The RelationshipTypeResource model constructor.
     * @property {module:model/RelationshipTypeResource}
     */
    RelationshipTypeResource: RelationshipTypeResource,
    /**
     * The RelationshipTypesResource model constructor.
     * @property {module:model/RelationshipTypesResource}
     */
    RelationshipTypesResource: RelationshipTypesResource,
    /**
     * The RelationshipsResource model constructor.
     * @property {module:model/RelationshipsResource}
     */
    RelationshipsResource: RelationshipsResource,
    /**
     * The RoleResource model constructor.
     * @property {module:model/RoleResource}
     */
    RoleResource: RoleResource,
    /**
     * The RolesResource model constructor.
     * @property {module:model/RolesResource}
     */
    RolesResource: RolesResource,
    /**
     * The RuleResource model constructor.
     * @property {module:model/RuleResource}
     */
    RuleResource: RuleResource,
    /**
     * The RulesResource model constructor.
     * @property {module:model/RulesResource}
     */
    RulesResource: RulesResource,
    /**
     * The StageResource model constructor.
     * @property {module:model/StageResource}
     */
    StageResource: StageResource,
    /**
     * The StagesResource model constructor.
     * @property {module:model/StagesResource}
     */
    StagesResource: StagesResource,
    /**
     * The StateCreationForm model constructor.
     * @property {module:model/StateCreationForm}
     */
    StateCreationForm: StateCreationForm,
    /**
     * The StateMutationForm model constructor.
     * @property {module:model/StateMutationForm}
     */
    StateMutationForm: StateMutationForm,
    /**
     * The StateMutationResource model constructor.
     * @property {module:model/StateMutationResource}
     */
    StateMutationResource: StateMutationResource,
    /**
     * The StateOperationForm model constructor.
     * @property {module:model/StateOperationForm}
     */
    StateOperationForm: StateOperationForm,
    /**
     * The StateResource model constructor.
     * @property {module:model/StateResource}
     */
    StateResource: StateResource,
    /**
     * The ModelsApi service constructor.
     * @property {module:api/ModelsApi}
     */
    ModelsApi: ModelsApi,
    /**
     * The StatesApi service constructor.
     * @property {module:api/StatesApi}
     */
    StatesApi: StatesApi
  };

  return exports;
}));
